config {
  memory.fixed: 1048576
}

memory {
  _current_break: zero 4;
}

func sbrk(amt i32) i32 {
  var temp i32 = loadI32(_current_break);
  storeI32(_current_break, temp + amt);
  // Note: _end is a special memory label generated by the assembler that
  // points to the end of statically reserved memory.  Currently we can't
  // initialize memory with symbols, so do relative addressing instead.
  return _end + temp;
}

import func powF32(f32, f32) f32;
import func sinF32(f32) f32;
import func cosF32(f32) f32;

import func powF64(f64, f64) f64;
import func sinF64(f64) f64;
import func cosF64(f64) f64;

// Needed for tests.
import func atomicLoadI32(i32) i32;
import func atomicStoreI32(i32, i32) void;
import func atomicCompareExchangeI32(i32, i32, i32) i32;

